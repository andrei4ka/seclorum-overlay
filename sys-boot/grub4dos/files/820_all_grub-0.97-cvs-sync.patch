Debian-Patch: cvs-sync.patch (from 0.97-47)

Index: netboot/cs89x0.c
===================================================================
RCS file: /sources/grub/grub/netboot/cs89x0.c,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -p -u -r1.5 -r1.6
--- foo/netboot/cs89x0.c	2 Jan 2002 21:56:40 -0000	1.5
+++ foo/netboot/cs89x0.c	20 May 2008 11:04:18 -0000	1.6
@@ -1,3 +1,21 @@
+/**
+   Per an email message from Russ Nelson <nelson@crynwr.com> on
+   18 March 2008 this file is now licensed under GPL Version 2.
+
+   From: Russ Nelson <nelson@crynwr.com>
+   Date: Tue, 18 Mar 2008 12:42:00 -0400
+   Subject: Re: [Etherboot-developers] cs89x0 driver in etherboot
+   -- quote from email
+   As copyright holder, if I say it doesn't conflict with the GPL,
+   then it doesn't conflict with the GPL.
+
+   However, there's no point in causing people's brains to overheat,
+   so yes, I grant permission for the code to be relicensed under the
+   GPLv2.  Please make sure that this change in licensing makes its
+   way upstream.  -russ
+   -- quote from email
+**/
+
 /* cs89x0.c: A Crystal Semiconductor CS89[02]0 driver for etherboot. */
 /*
   Permission is granted to distribute the enclosed cs89x0.[ch] driver
Index: netboot/cs89x0.h
===================================================================
RCS file: /sources/grub/grub/netboot/cs89x0.h,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -p -u -r1.3 -r1.4
--- foo/netboot/cs89x0.h	22 Apr 2000 01:17:09 -0000	1.3
+++ foo/netboot/cs89x0.h	20 May 2008 11:04:18 -0000	1.4
@@ -1,3 +1,21 @@
+/**
+   Per an email message from Russ Nelson <nelson@crynwr.com> on
+   18 March 2008 this file is now licensed under GPL Version 2.
+
+   From: Russ Nelson <nelson@crynwr.com>
+   Date: Tue, 18 Mar 2008 12:42:00 -0400
+   Subject: Re: [Etherboot-developers] cs89x0 driver in etherboot
+   -- quote from email
+   As copyright holder, if I say it doesn't conflict with the GPL,
+   then it doesn't conflict with the GPL.
+
+   However, there's no point in causing people's brains to overheat,
+   so yes, I grant permission for the code to be relicensed under the
+   GPLv2.  Please make sure that this change in licensing makes its
+   way upstream.  -russ
+   -- quote from email
+**/
+
 /*  Copyright, 1988-1992, Russell Nelson, Crynwr Software
 
    This program is free software; you can redistribute it and/or modify
Index: netboot/etherboot.h
===================================================================
RCS file: /sources/grub/grub/netboot/etherboot.h,v
retrieving revision 1.12
retrieving revision 1.13
diff -u -p -u -r1.12 -r1.13
--- foo/netboot/etherboot.h	8 May 2002 07:12:29 -0000	1.12
+++ foo/netboot/etherboot.h	8 Sep 2006 12:56:22 -0000	1.13
@@ -531,9 +531,6 @@ extern int ip_abort;
 extern int network_ready;
 extern struct rom_info rom;
 extern struct arptable_t arptable[MAX_ARP];
-extern struct bootpd_t bootp_data;
-#define	BOOTP_DATA_ADDR	(&bootp_data)
-extern unsigned char *end_of_rfc1533;
 
 /* config.c */
 extern struct nic nic;
Index: netboot/main.c
===================================================================
RCS file: /sources/grub/grub/netboot/main.c,v
retrieving revision 1.16
retrieving revision 1.17
diff -u -p -u -r1.16 -r1.17
--- foo/netboot/main.c	20 May 2004 22:17:27 -0000	1.16
+++ foo/netboot/main.c	8 Sep 2006 12:56:22 -0000	1.17
@@ -56,7 +56,8 @@ static int vendorext_isvalid;
 static unsigned long netmask;
 static struct bootpd_t bootp_data;
 static unsigned long xid;
-static unsigned char *end_of_rfc1533 = NULL;
+
+#define	BOOTP_DATA_ADDR	(&bootp_data)
 
 #ifndef	NO_DHCP_SUPPORT
 #endif /* NO_DHCP_SUPPORT */
@@ -967,7 +968,6 @@ decode_rfc1533 (unsigned char *p, int bl
   
   if (block == 0)
     {
-      end_of_rfc1533 = NULL;
       vendorext_isvalid = 0;
       
       if (grub_memcmp (p, rfc1533_cookie, 4))
@@ -1021,7 +1021,7 @@ decode_rfc1533 (unsigned char *p, int bl
 	}
       else if (c == RFC1533_END)
 	{
-	  end_of_rfc1533 = endp = p;
+	  endp = p;
 	  continue;
 	}
       else if (c == RFC1533_NETMASK)
Index: netboot/natsemi.c
===================================================================
RCS file: /sources/grub/grub/netboot/natsemi.c,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -p -u -r1.1 -r1.2
--- foo/netboot/natsemi.c	15 Jan 2002 10:32:22 -0000	1.1
+++ foo/netboot/natsemi.c	10 Sep 2006 07:26:10 -0000	1.2
@@ -608,7 +608,7 @@ natsemi_transmit(struct nic  *nic,
 		 const char  *p)     /* Packet */
 {
     u32 status, to, nstype;
-    u32 tx_status;
+    volatile u32 tx_status;
     
     /* Stop the transmitter */
     outl(TxOff, ioaddr + ChipCmd);
@@ -647,7 +647,7 @@ natsemi_transmit(struct nic  *nic,
 
     to = currticks() + TX_TIMEOUT;
 
-    while ((((volatile u32) tx_status=txd.cmdsts) & OWN) && (currticks() < to))
+    while (((tx_status=txd.cmdsts) & OWN) && (currticks() < to))
         /* wait */ ;
 
     if (currticks() >= to) {
Index: netboot/sis900.c
===================================================================
RCS file: /sources/grub/grub/netboot/sis900.c,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -p -u -r1.1 -r1.2
--- foo/netboot/sis900.c	2 Jan 2002 21:56:40 -0000	1.1
+++ foo/netboot/sis900.c	10 Sep 2006 07:26:10 -0000	1.2
@@ -901,7 +901,7 @@ sis900_transmit(struct nic  *nic,
                 const char  *p)     /* Packet */
 {
     u32 status, to, nstype;
-    u32 tx_status;
+    volatile u32 tx_status;
     
     /* Stop the transmitter */
     outl(TxDIS, ioaddr + cr);
@@ -940,7 +940,7 @@ sis900_transmit(struct nic  *nic,
 
     to = currticks() + TX_TIMEOUT;
 
-    while ((((volatile u32) tx_status=txd.cmdsts) & OWN) && (currticks() < to))
+    while (((tx_status=txd.cmdsts) & OWN) && (currticks() < to))
         /* wait */ ;
 
     if (currticks() >= to) {
